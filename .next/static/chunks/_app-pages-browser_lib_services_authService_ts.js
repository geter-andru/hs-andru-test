"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_services_authService_ts"],{

/***/ "(app-pages-browser)/./lib/services/authService.ts":
/*!*************************************!*\
  !*** ./lib/services/authService.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authService: () => (/* binding */ authService),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var _supabase_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../supabase/client */ \"(app-pages-browser)/./lib/supabase/client.ts\");\n// Enhanced Auth Service for Next.js Platform\n// Based on React SPA's authService.js patterns with Supabase integration\n\n\nclass AuthService {\n    // Load session from cookies on initialization\n    loadSessionFromStorage() {\n        if (false) {}\n        try {\n            const sessionData = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.SESSION_COOKIE);\n            if (sessionData) {\n                this.session = JSON.parse(sessionData);\n                // Validate session hasn't expired\n                if (this.session && this.session.expiresAt < Date.now()) {\n                    this.clearSession();\n                }\n            }\n        } catch (error) {\n            console.warn('Failed to load session from storage:', error);\n            this.clearSession();\n        }\n    }\n    // Save session to cookies\n    saveSessionToStorage(session) {\n        if (false) {}\n        try {\n            js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(this.TOKEN_COOKIE, session.accessToken, {\n                expires: 1\n            });\n            js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(this.REFRESH_COOKIE, session.refreshToken, {\n                expires: 7\n            });\n            js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(this.CUSTOMER_ID_COOKIE, session.customerId, {\n                expires: 7\n            });\n            js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(this.SESSION_COOKIE, JSON.stringify(session), {\n                expires: 1\n            });\n        } catch (error) {\n            console.error('Failed to save session to storage:', error);\n        }\n    }\n    // Clear session from cookies\n    clearSession() {\n        this.session = null;\n        if (false) {}\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(this.TOKEN_COOKIE);\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(this.REFRESH_COOKIE);\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(this.CUSTOMER_ID_COOKIE);\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(this.SESSION_COOKIE);\n    }\n    // Supabase authentication methods\n    async loginWithSupabase() {\n        try {\n            var _supabaseUser_user_metadata, _supabaseUser_user_metadata1, _supabaseUser_user_metadata2;\n            const supabaseUser = await (0,_supabase_client__WEBPACK_IMPORTED_MODULE_1__.getCurrentUser)();\n            if (!supabaseUser) {\n                return {\n                    success: false,\n                    error: 'No Supabase user found. Please sign in.'\n                };\n            }\n            // Create customer profile from Supabase user\n            const customer = {\n                id: 'SUPABASE_USER',\n                customerId: 'SUPABASE_USER',\n                name: ((_supabaseUser_user_metadata = supabaseUser.user_metadata) === null || _supabaseUser_user_metadata === void 0 ? void 0 : _supabaseUser_user_metadata.full_name) || supabaseUser.email || 'Supabase User',\n                customerName: ((_supabaseUser_user_metadata1 = supabaseUser.user_metadata) === null || _supabaseUser_user_metadata1 === void 0 ? void 0 : _supabaseUser_user_metadata1.full_name) || supabaseUser.email || 'Supabase User',\n                email: supabaseUser.email || '',\n                company: ((_supabaseUser_user_metadata2 = supabaseUser.user_metadata) === null || _supabaseUser_user_metadata2 === void 0 ? void 0 : _supabaseUser_user_metadata2.company) || 'Your Company',\n                status: 'active',\n                isAdmin: false,\n                demoMode: false,\n                hasPersonalizedICP: true,\n                hasDetailedAnalysis: true,\n                paymentStatus: 'Completed' // Supabase users get full access\n            };\n            // Create session\n            const session = {\n                customerId: 'SUPABASE_USER',\n                accessToken: 'supabase-auth',\n                refreshToken: \"supabase_refresh_\".concat(Date.now()),\n                expiresAt: Date.now() + 24 * 60 * 60 * 1000,\n                customer\n            };\n            this.session = session;\n            this.saveSessionToStorage(session);\n            return {\n                success: true,\n                data: customer\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: 'Supabase authentication failed. Please try again.'\n            };\n        }\n    }\n    // Check if user is authenticated via Supabase\n    async isSupabaseAuthenticated() {\n        try {\n            const user = await (0,_supabase_client__WEBPACK_IMPORTED_MODULE_1__.getCurrentUser)();\n            return !!user;\n        } catch (e) {\n            return false;\n        }\n    }\n    // Enhanced login with multiple authentication patterns\n    async login(customerId, accessToken) {\n        try {\n            // Simulate API delay\n            await new Promise((resolve)=>setTimeout(resolve, 500));\n            const customer = this.getCustomerProfile(customerId);\n            if (!customer) {\n                return {\n                    success: false,\n                    error: 'Customer not found. Please check your Customer ID.'\n                };\n            }\n            // Validate admin access tokens\n            if (customer.isAdmin && accessToken) {\n                const validAdminTokens = [\n                    'admin-demo-token-2025',\n                    'test-token-123456'\n                ];\n                if (!validAdminTokens.includes(accessToken)) {\n                    return {\n                        success: false,\n                        error: 'Invalid admin access token.'\n                    };\n                }\n            }\n            // Create session\n            const session = {\n                customerId,\n                accessToken: accessToken || \"token_\".concat(customerId, \"_\").concat(Date.now()),\n                refreshToken: \"refresh_\".concat(customerId, \"_\").concat(Date.now()),\n                expiresAt: Date.now() + 24 * 60 * 60 * 1000,\n                customer\n            };\n            this.session = session;\n            this.saveSessionToStorage(session);\n            return {\n                success: true,\n                data: customer\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: 'Login failed. Please try again.'\n            };\n        }\n    }\n    // Logout and clear session\n    logout() {\n        this.clearSession();\n        if (true) {\n            window.location.href = '/login';\n        }\n    }\n    // Check if user is authenticated\n    isAuthenticated() {\n        if (!this.session) return false;\n        if (this.session.expiresAt < Date.now()) {\n            this.clearSession();\n            return false;\n        }\n        return true;\n    }\n    // Get current session\n    getCurrentSession() {\n        if (!this.isAuthenticated()) return null;\n        return this.session;\n    }\n    // Get current customer\n    getCurrentCustomer() {\n        const session = this.getCurrentSession();\n        return (session === null || session === void 0 ? void 0 : session.customer) || null;\n    }\n    // Get customer ID\n    getCustomerId() {\n        const session = this.getCurrentSession();\n        return session === null || session === void 0 ? void 0 : session.customerId;\n    }\n    // Get access token\n    getAccessToken() {\n        const session = this.getCurrentSession();\n        return session === null || session === void 0 ? void 0 : session.accessToken;\n    }\n    // Admin access checks\n    isAdmin() {\n        const customer = this.getCurrentCustomer();\n        return (customer === null || customer === void 0 ? void 0 : customer.isAdmin) === true;\n    }\n    hasAdminAccess() {\n        const customer = this.getCurrentCustomer();\n        return (customer === null || customer === void 0 ? void 0 : customer.isAdmin) === true && (customer === null || customer === void 0 ? void 0 : customer.adminAccess) === true;\n    }\n    // Payment status checks\n    hasCompletedPayment() {\n        const customer = this.getCurrentCustomer();\n        // Admin users always have access\n        if (customer === null || customer === void 0 ? void 0 : customer.isAdmin) return true;\n        return (customer === null || customer === void 0 ? void 0 : customer.paymentStatus) === 'Completed';\n    }\n    // Tool access validation\n    hasToolAccess(toolName) {\n        const customer = this.getCurrentCustomer();\n        if (!customer) return false;\n        // Admin users have access to all tools\n        if (customer.isAdmin) return true;\n        // Check payment status for regular users\n        if (!this.hasCompletedPayment()) return false;\n        // Tool-specific access logic\n        switch(toolName){\n            case 'icp':\n                return customer.hasPersonalizedICP || false;\n            case 'cost-calculator':\n                return true; // Available to all paid users\n            case 'business-case':\n                return customer.hasDetailedAnalysis || false;\n            default:\n                return false;\n        }\n    }\n    // Refresh authentication token\n    async refreshToken() {\n        if (!this.session) return false;\n        try {\n            // Simulate token refresh API call\n            const newToken = \"refreshed_token_\".concat(this.session.customerId, \"_\").concat(Date.now());\n            this.session.accessToken = newToken;\n            this.session.expiresAt = Date.now() + 24 * 60 * 60 * 1000;\n            this.saveSessionToStorage(this.session);\n            return true;\n        } catch (error) {\n            console.error('Failed to refresh token:', error);\n            this.clearSession();\n            return false;\n        }\n    }\n    // Session validation and extension\n    async validateSession() {\n        if (!this.session) return false;\n        // If session expires in less than 1 hour, try to refresh\n        const oneHour = 60 * 60 * 1000;\n        if (this.session.expiresAt - Date.now() < oneHour) {\n            return await this.refreshToken();\n        }\n        return true;\n    }\n    // Get customer profiles (mock data)\n    getCustomerProfile(customerId) {\n        const profiles = {\n            'CUST_2': {\n                id: 'CUST_2',\n                customerId: 'CUST_2',\n                name: 'John Demo',\n                customerName: 'John Demo',\n                email: 'john@example.com',\n                company: 'Demo Company',\n                status: 'active',\n                isAdmin: false,\n                demoMode: false,\n                hasPersonalizedICP: true,\n                hasDetailedAnalysis: false,\n                paymentStatus: 'Completed'\n            },\n            'CUST_4': {\n                id: 'CUST_4',\n                customerId: 'CUST_4',\n                name: 'Admin Demo',\n                customerName: 'Platform Administrator',\n                email: 'admin@example.com',\n                company: 'H&S Revenue Intelligence',\n                status: 'admin',\n                isAdmin: true,\n                demoMode: true,\n                hasPersonalizedICP: true,\n                hasDetailedAnalysis: true,\n                adminAccess: true,\n                paymentStatus: 'Completed'\n            },\n            'dru78DR9789SDF862': {\n                id: 'dru78DR9789SDF862',\n                customerId: 'dru78DR9789SDF862',\n                name: 'Geter',\n                customerName: 'Geter',\n                email: 'geter@hs-platform.com',\n                company: 'H&S Platform',\n                status: 'admin',\n                isAdmin: true,\n                demoMode: true,\n                hasPersonalizedICP: true,\n                hasDetailedAnalysis: true,\n                adminAccess: true,\n                paymentStatus: 'Completed'\n            },\n            'CUST_02': {\n                id: 'CUST_02',\n                customerId: 'CUST_02',\n                name: 'Test User',\n                customerName: 'Test User',\n                email: 'test@example.com',\n                company: 'Test Company',\n                status: 'test',\n                isAdmin: false,\n                demoMode: true,\n                hasPersonalizedICP: false,\n                hasDetailedAnalysis: false,\n                paymentStatus: 'Pending'\n            }\n        };\n        return profiles[customerId] || null;\n    }\n    // Development utilities\n    isDemoMode() {\n        const customer = this.getCurrentCustomer();\n        return (customer === null || customer === void 0 ? void 0 : customer.demoMode) === true;\n    }\n    getSessionInfo() {\n        var _this_session;\n        return {\n            isAuthenticated: this.isAuthenticated(),\n            customerId: this.getCustomerId(),\n            isAdmin: this.isAdmin(),\n            hasAdminAccess: this.hasAdminAccess(),\n            hasCompletedPayment: this.hasCompletedPayment(),\n            isDemoMode: this.isDemoMode(),\n            sessionExpiresAt: (_this_session = this.session) === null || _this_session === void 0 ? void 0 : _this_session.expiresAt,\n            sessionValid: this.session ? this.session.expiresAt > Date.now() : false\n        };\n    }\n    // Extract credentials from URL parameters\n    extractCredentials(searchParams) {\n        const customerId = searchParams.get('customerId') || '';\n        const accessToken = searchParams.get('token') || '';\n        if (!customerId || !accessToken) {\n            return null;\n        }\n        return {\n            customerId,\n            accessToken\n        };\n    }\n    // Validate credentials using existing authentication logic\n    async validateCredentials(customerId, accessToken) {\n        try {\n            // Use existing authentication method for admin users\n            if (customerId === 'dru78DR9789SDF862' && accessToken === 'admin-demo-token-2025') {\n                const adminData = await this.getAdminProfile();\n                return {\n                    valid: true,\n                    customerData: adminData\n                };\n            }\n            // For regular customers, implement proper validation\n            // This would need integration with actual customer database\n            return {\n                valid: false,\n                error: 'Customer validation not implemented for non-admin users'\n            };\n        } catch (error) {\n            return {\n                valid: false,\n                error: \"Validation failed: \".concat(error.message)\n            };\n        }\n    }\n    // Generate session from validated credentials\n    async generateSession(customerId, customerData) {\n        const sessionData = {\n            customerId,\n            accessToken: \"token_\".concat(Date.now()),\n            refreshToken: \"refresh_\".concat(Date.now()),\n            expiresAt: Date.now() + 24 * 60 * 60 * 1000,\n            customer: customerData\n        };\n        this.session = sessionData;\n        this.saveSessionToStorage();\n        return sessionData;\n    }\n    // Refresh existing session\n    async refreshSession() {\n        if (this.session && this.session.expiresAt > Date.now()) {\n            this.session.expiresAt = Date.now() + 24 * 60 * 60 * 1000; // Extend by 24 hours\n            this.saveSessionToStorage();\n        }\n    }\n    constructor(){\n        this.session = null;\n        // Cookie names\n        this.TOKEN_COOKIE = 'hs_auth_token';\n        this.REFRESH_COOKIE = 'hs_refresh_token';\n        this.CUSTOMER_ID_COOKIE = 'hs_customer_id';\n        this.SESSION_COOKIE = 'hs_session';\n        if (AuthService.instance) {\n            return AuthService.instance;\n        }\n        AuthService.instance = this;\n        this.loadSessionFromStorage();\n    }\n}\n// Export singleton instance\nconst authService = new AuthService();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (authService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/services/authService.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs":
/*!***************************************************!*\
  !*** ./node_modules/js-cookie/dist/js.cookie.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ api)\n/* harmony export */ });\n/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qcy1jb29raWUvZGlzdC9qcy5jb29raWUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLEVBQUU7QUFDdEMsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSx1RUFBdUU7QUFDdkU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSw2Q0FBNkM7QUFDN0MsT0FBTztBQUNQO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLHlDQUF5QztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBOztBQUVBLG1DQUFtQyxXQUFXO0FBQzlDOztBQUUwQiIsInNvdXJjZXMiOlsiL1VzZXJzL2dldGVyL2FuZHJ1L2hzLWFuZHJ1LXRlc3QvbW9kZXJuLXBsYXRmb3JtL25vZGVfbW9kdWxlcy9qcy1jb29raWUvZGlzdC9qcy5jb29raWUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBqcy1jb29raWUgdjMuMC41IHwgTUlUICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cbmZ1bmN0aW9uIGFzc2lnbiAodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGFyZ2V0XG59XG4vKiBlc2xpbnQtZW5hYmxlIG5vLXZhciAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cbnZhciBkZWZhdWx0Q29udmVydGVyID0ge1xuICByZWFkOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICBpZiAodmFsdWVbMF0gPT09ICdcIicpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUuc2xpY2UoMSwgLTEpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvKCVbXFxkQS1GXXsyfSkrL2dpLCBkZWNvZGVVUklDb21wb25lbnQpXG4gIH0sXG4gIHdyaXRlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKS5yZXBsYWNlKFxuICAgICAgLyUoMlszNDZCRl18M1tBQy1GXXw0MHw1W0JERV18NjB8N1tCQ0RdKS9nLFxuICAgICAgZGVjb2RlVVJJQ29tcG9uZW50XG4gICAgKVxuICB9XG59O1xuLyogZXNsaW50LWVuYWJsZSBuby12YXIgKi9cblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyICovXG5cbmZ1bmN0aW9uIGluaXQgKGNvbnZlcnRlciwgZGVmYXVsdEF0dHJpYnV0ZXMpIHtcbiAgZnVuY3Rpb24gc2V0IChuYW1lLCB2YWx1ZSwgYXR0cmlidXRlcykge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBhdHRyaWJ1dGVzID0gYXNzaWduKHt9LCBkZWZhdWx0QXR0cmlidXRlcywgYXR0cmlidXRlcyk7XG5cbiAgICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMuZXhwaXJlcyA9PT0gJ251bWJlcicpIHtcbiAgICAgIGF0dHJpYnV0ZXMuZXhwaXJlcyA9IG5ldyBEYXRlKERhdGUubm93KCkgKyBhdHRyaWJ1dGVzLmV4cGlyZXMgKiA4NjRlNSk7XG4gICAgfVxuICAgIGlmIChhdHRyaWJ1dGVzLmV4cGlyZXMpIHtcbiAgICAgIGF0dHJpYnV0ZXMuZXhwaXJlcyA9IGF0dHJpYnV0ZXMuZXhwaXJlcy50b1VUQ1N0cmluZygpO1xuICAgIH1cblxuICAgIG5hbWUgPSBlbmNvZGVVUklDb21wb25lbnQobmFtZSlcbiAgICAgIC5yZXBsYWNlKC8lKDJbMzQ2Ql18NUV8NjB8N0MpL2csIGRlY29kZVVSSUNvbXBvbmVudClcbiAgICAgIC5yZXBsYWNlKC9bKCldL2csIGVzY2FwZSk7XG5cbiAgICB2YXIgc3RyaW5naWZpZWRBdHRyaWJ1dGVzID0gJyc7XG4gICAgZm9yICh2YXIgYXR0cmlidXRlTmFtZSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgICBpZiAoIWF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0pIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc3RyaW5naWZpZWRBdHRyaWJ1dGVzICs9ICc7ICcgKyBhdHRyaWJ1dGVOYW1lO1xuXG4gICAgICBpZiAoYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXSA9PT0gdHJ1ZSkge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyBDb25zaWRlcnMgUkZDIDYyNjUgc2VjdGlvbiA1LjI6XG4gICAgICAvLyAuLi5cbiAgICAgIC8vIDMuICBJZiB0aGUgcmVtYWluaW5nIHVucGFyc2VkLWF0dHJpYnV0ZXMgY29udGFpbnMgYSAleDNCIChcIjtcIilcbiAgICAgIC8vICAgICBjaGFyYWN0ZXI6XG4gICAgICAvLyBDb25zdW1lIHRoZSBjaGFyYWN0ZXJzIG9mIHRoZSB1bnBhcnNlZC1hdHRyaWJ1dGVzIHVwIHRvLFxuICAgICAgLy8gbm90IGluY2x1ZGluZywgdGhlIGZpcnN0ICV4M0IgKFwiO1wiKSBjaGFyYWN0ZXIuXG4gICAgICAvLyAuLi5cbiAgICAgIHN0cmluZ2lmaWVkQXR0cmlidXRlcyArPSAnPScgKyBhdHRyaWJ1dGVzW2F0dHJpYnV0ZU5hbWVdLnNwbGl0KCc7JylbMF07XG4gICAgfVxuXG4gICAgcmV0dXJuIChkb2N1bWVudC5jb29raWUgPVxuICAgICAgbmFtZSArICc9JyArIGNvbnZlcnRlci53cml0ZSh2YWx1ZSwgbmFtZSkgKyBzdHJpbmdpZmllZEF0dHJpYnV0ZXMpXG4gIH1cblxuICBmdW5jdGlvbiBnZXQgKG5hbWUpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJyB8fCAoYXJndW1lbnRzLmxlbmd0aCAmJiAhbmFtZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIFRvIHByZXZlbnQgdGhlIGZvciBsb29wIGluIHRoZSBmaXJzdCBwbGFjZSBhc3NpZ24gYW4gZW1wdHkgYXJyYXlcbiAgICAvLyBpbiBjYXNlIHRoZXJlIGFyZSBubyBjb29raWVzIGF0IGFsbC5cbiAgICB2YXIgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZSA/IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOyAnKSA6IFtdO1xuICAgIHZhciBqYXIgPSB7fTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvb2tpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBwYXJ0cyA9IGNvb2tpZXNbaV0uc3BsaXQoJz0nKTtcbiAgICAgIHZhciB2YWx1ZSA9IHBhcnRzLnNsaWNlKDEpLmpvaW4oJz0nKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIGZvdW5kID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhcnRzWzBdKTtcbiAgICAgICAgamFyW2ZvdW5kXSA9IGNvbnZlcnRlci5yZWFkKHZhbHVlLCBmb3VuZCk7XG5cbiAgICAgICAgaWYgKG5hbWUgPT09IGZvdW5kKSB7XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZSkge31cbiAgICB9XG5cbiAgICByZXR1cm4gbmFtZSA/IGphcltuYW1lXSA6IGphclxuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5jcmVhdGUoXG4gICAge1xuICAgICAgc2V0LFxuICAgICAgZ2V0LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiAobmFtZSwgYXR0cmlidXRlcykge1xuICAgICAgICBzZXQoXG4gICAgICAgICAgbmFtZSxcbiAgICAgICAgICAnJyxcbiAgICAgICAgICBhc3NpZ24oe30sIGF0dHJpYnV0ZXMsIHtcbiAgICAgICAgICAgIGV4cGlyZXM6IC0xXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH0sXG4gICAgICB3aXRoQXR0cmlidXRlczogZnVuY3Rpb24gKGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgcmV0dXJuIGluaXQodGhpcy5jb252ZXJ0ZXIsIGFzc2lnbih7fSwgdGhpcy5hdHRyaWJ1dGVzLCBhdHRyaWJ1dGVzKSlcbiAgICAgIH0sXG4gICAgICB3aXRoQ29udmVydGVyOiBmdW5jdGlvbiAoY29udmVydGVyKSB7XG4gICAgICAgIHJldHVybiBpbml0KGFzc2lnbih7fSwgdGhpcy5jb252ZXJ0ZXIsIGNvbnZlcnRlciksIHRoaXMuYXR0cmlidXRlcylcbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIGF0dHJpYnV0ZXM6IHsgdmFsdWU6IE9iamVjdC5mcmVlemUoZGVmYXVsdEF0dHJpYnV0ZXMpIH0sXG4gICAgICBjb252ZXJ0ZXI6IHsgdmFsdWU6IE9iamVjdC5mcmVlemUoY29udmVydGVyKSB9XG4gICAgfVxuICApXG59XG5cbnZhciBhcGkgPSBpbml0KGRlZmF1bHRDb252ZXJ0ZXIsIHsgcGF0aDogJy8nIH0pO1xuLyogZXNsaW50LWVuYWJsZSBuby12YXIgKi9cblxuZXhwb3J0IHsgYXBpIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\n"));

/***/ })

}]);